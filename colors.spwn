#[cache_output]

color_names = [
    ["pink", rgb8(253, 189, 192)],
    ["green", rgb8(161, 255, 134)],
    ["red", rgb8(252, 33, 67)],
    ["yellow", rgb8(255, 253, 141)],
    ["orange", rgb8(254, 188, 89)],
    ["magenta", rgb8(189, 0, 187)],
    ["blue", rgb8(62, 77, 248)],
    ["start", rgb8(255,255,255)],
    ["end", rgb8(0,0,0)],
]

let colors = {}

for [color_name, color] in color_names {
    let colors[color_name] = {
        color: ?c,
        block: ?b,
    }
    colors[color_name].color.set(color)
}

return {
    colors,
    get_color: (input: @string) -> @dictionary {
        for [key, value] in colors.items() {
            if key.uppercase().starts_with(input) {
                return value
            }
        }
        throw "Color '{}' not found".fmt(input)
    }
}
